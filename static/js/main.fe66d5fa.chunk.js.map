{"version":3,"sources":["components/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Dashboard.module.css","services/notify.jsx","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js","components/Controls/Controls.module.css","components/Balance/Balance.module.css"],"names":["module","exports","toast","configure","notifySettings","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","notifyError","notEnoughAmount","error","enterCorrectAmount","Controls","state","amount","handleInputChange","e","setState","Number","currentTarget","value","handleClickDeposit","preventDefault","props","onDeposit","handleClickWithdraw","onWithdraw","this","className","styles","controls","type","name","controls__input","onChange","controls__button","onClick","Component","Balance","income","expenses","balance","balance__txt","toFixed","TransactionHistory","items","history","history__head","map","item","key","id","date","typeOfOperation","DEPOSITE","WITHDROWAL","sumOfOperations","Dashboard","transactions","saveTransaction","transaction","shortid","generate","Date","toLocaleString","notyfy","depositTransaction","withdrawTransaction","dashboard","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe66d5fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__23J6B\",\"history__head\":\"TransactionHistory_history__head__37eK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__o7oct\"};","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nconst notifySettings = {\n    position: 'bottom-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n};\n\nconst notifyError = {\n    NOT_ENOUGH_AMOUNT: 'На счету недостаточно средств для проведения операции!',\n    ENTER_CORRECT_AMOUNT: 'Введите корректную сумму для проведения операции!',\n};\n\nconst notEnoughAmount = () => toast.error(notifyError.NOT_ENOUGH_AMOUNT, notifySettings);\n\nconst enterCorrectAmount = () => toast.error(notifyError.ENTER_CORRECT_AMOUNT, notifySettings);\n\nexport default { notEnoughAmount, enterCorrectAmount };\n\n","import React, { Component } from 'react';\r\n\r\nimport styles from './Controls.module.css';\r\n\r\nclass Controls extends Component {\r\n    state = {\r\n        amount: '',\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        this.setState({\r\n            amount: Number(e.currentTarget.value),\r\n        });\r\n    };\r\n\r\n    handleClickDeposit = e => {\r\n        e.preventDefault();\r\n        this.props.onDeposit(this.state.amount);\r\n        this.setState({ amount: '' });\r\n    };\r\n\r\n    handleClickWithdraw = e => {\r\n        e.preventDefault();\r\n\r\n        this.props.onWithdraw(this.state.amount);\r\n        this.setState({ amount: '' });\r\n    };\r\n\r\n    render() {\r\n        const { amount } = this.state;\r\n        return (\r\n            <section className={styles.controls}>\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"amount\"\r\n                    className={styles.controls__input}\r\n                    value={amount}\r\n                    onChange={this.handleInputChange}\r\n                />\r\n                <button\r\n                    type=\"button\"\r\n                    className={styles.controls__button}\r\n                    onClick={this.handleClickDeposit}\r\n                >\r\n                    Deposit\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className={styles.controls__button}\r\n                    onClick={this.handleClickWithdraw}\r\n                >\r\n                    Withdraw\r\n                </button>\r\n            </section>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\n\r\nimport styles from './Balance.module.css';\r\n\r\nconst Balance = ({ income, expenses, balance }) => (\r\n    <section className={styles.balance}>\r\n        <span className={styles.balance__txt}>️{income.toFixed(2)}$</span>\r\n        <span className={styles.balance__txt}>{expenses.toFixed(2)}$</span>\r\n        <span className={styles.balance__txt}>Balance: {balance.toFixed(2)}$</span>\r\n    </section>\r\n\r\n);\r\n\r\nBalance.propTypes = {\r\n    income: T.number.isRequired,\r\n    expenses: T.number.isRequired,\r\n    balance: T.number.isRequired,\r\n};\r\n\r\nexport default Balance;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\n\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n    <table className={styles.history}>\r\n        <thead className={styles.history__head}>\r\n            <tr>\r\n                <th>Transaction</th>\r\n                <th>Amount</th>\r\n                <th>Date</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {items.map(item => (\r\n                <tr key={item.id}>\r\n                    <td>{item.type}</td>\r\n                    <td>{item.amount.toFixed(2)}$</td>\r\n                    <td>{item.date}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n    items: T.arrayOf(\r\n        T.shape({\r\n            id: T.string.isRequired,\r\n            type: T.string.isRequired,\r\n            amount: T.number.isRequired,\r\n            date: T.string.isRequired,\r\n        }).isRequired,\r\n    ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport styles from './Dashboard.module.css';\r\n\r\nimport notyfy from '../../services/notify';\r\n\r\nimport Controls from '../Controls'\r\nimport Balance from '../Balance'\r\nimport TransactionHistory from '../TransactionHistory'\r\n\r\nconst typeOfOperation = {\r\n    DEPOSITE: 'Deposite',\r\n    WITHDROWAL: 'Withdrawal',\r\n};\r\n\r\nconst sumOfOperations = {\r\n    income: 0,\r\n    expenses: 0,\r\n}\r\n\r\nclass Dashboard extends Component {\r\n\r\n    state = {\r\n        transactions: [],\r\n        balance: 0,\r\n    };\r\n\r\n    saveTransaction = (amount, type) => {\r\n\r\n        const transaction = {\r\n            id: shortid.generate(),\r\n            type,\r\n            amount,\r\n            date: new Date().toLocaleString(),\r\n        };\r\n\r\n        if (amount > 0) {\r\n            this.setState(state => ({\r\n                transactions: [...state.transactions, transaction],\r\n            }));\r\n        } else {\r\n            notyfy.enterCorrectAmount();\r\n        }\r\n    };\r\n\r\n    depositTransaction = amount => {\r\n        this.saveTransaction(amount, typeOfOperation.DEPOSITE);\r\n        if (amount > 0) {\r\n            this.setState(state => ({\r\n                balance: state.balance + amount\r\n            }));\r\n            sumOfOperations.income += amount;\r\n        };\r\n    };\r\n\r\n    withdrawTransaction = amount => {\r\n        if ((amount > 0) && (amount <= this.state.balance)) {\r\n            this.setState(state => ({\r\n                balance: state.balance - amount\r\n            }));\r\n            this.saveTransaction(amount, typeOfOperation.WITHDROWAL);\r\n            sumOfOperations.expenses += amount;\r\n\r\n        } else if (amount <= 0) {\r\n            notyfy.enterCorrectAmount();\r\n        }\r\n        else {\r\n            notyfy.notEnoughAmount();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { balance, transactions } = this.state;\r\n        const { income, expenses } = sumOfOperations;\r\n        return (\r\n            < div className={styles.dashboard} >\r\n                <Controls onDeposit={this.depositTransaction} onWithdraw={this.withdrawTransaction} />\r\n                <Balance income={income} expenses={expenses} balance={balance} />\r\n                <TransactionHistory items={transactions} />\r\n            </div >\r\n        )\r\n    }\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\nimport Dashboard from '../Dashboard'\r\n\r\nconst App = () => (\r\n    <Dashboard />\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'normalize.css';\r\nimport './index.css';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__2FVr0\",\"controls__input\":\"Controls_controls__input__2x-r-\",\"controls__button\":\"Controls_controls__button__j340m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__-tFES\",\"balance__txt\":\"Balance_balance__txt__1oErG\"};"],"sourceRoot":""}